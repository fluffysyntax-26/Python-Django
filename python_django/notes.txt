the manage.py file is used to run various django commands

a python_django folder(same as the root directory)
    settings.py is where we will declare all the project configurations
    urls.py defines all application endpoints
    asgi.py and wsgi.py which are asynchronous and synchronous entry points respectively

ref whiteboard notes



creating our own django app
a django app is a set of features to your django project

to create an app run the following command
"peotry run python manage.py startapp app" - instead of app you can name it anything else

this will create a folder called 'app' in the current directory
    __init__py is used to define this as a python package
    admin.py is used to link our models with django admin panel
    models.py for models, which are objects that represent rows in our database table
    apps.py to configur the application and be able to import it from our base django project
    test.py for writing tests of our code
    views.py for writing our application endpoints or the logic for the various URLs that users might access

    the migrations folder for storing database migrations in case this app requires making any database changes


Creating a hello world app (1st app): 

created app/urls.py
    - created a urlpatterns list 

in python_django dir, added the newly created url in app/urls.py to the urlpatterns list 

in the app/urls.py and project/urls.py

the string from the project/urls.py -> urlspattern, newly added url will be appended with the string from the 
app/urls.py to create url pages 

app/urls.py: 
urlpatterns = [
    path('new', home), 
    path('add', home), 
    path('delete', home),
]

project/urls.py: 
urlpatterns = [
    path("admin/", admin.site.site) #default
    path("users/", include("app.urls")), 
]

to access 'add' option from the webpage: 
the new url would be "users/add"
similarly, "users/new" and "users/delete"

the strings in this case are left blank as we want it to be in the homepage

next, register the django app in the settings: 
    go to root_dir/project_name/settings.py 
    go to installed apps (list of strings)
    add "app.apps.Appconfig" - this corresponds to app/apps.py/AppConfig (class)
